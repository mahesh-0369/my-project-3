
#import "CKXPCShareDaemon.h"
#import "GKAccountServicePrivate.h"
#import "GKProfileServicePrivate.h"
#import "GKFriendServicePrivate.h"
#import "GKGameServicePrivate.h"
#import "GKGameStatServicePrivate.h"
#import "GKChallengeServicePrivate.h"
#import "GKMultiplayerServicePrivate.h"
#import "GKTurnBasedServicePrivate.h"
#import "GKUtilityServicePrivate.h"
#import "GKBulletinServicePrivate.h"
#import "GKAnalyticsServicePrivate.h"
#import "GKGameSessionServicePrivate.h"
#import "GKTournamentServicePrivate.h"
#import "CKXPCShareDaemon.h"
#import "CKXPCShareDaemon.h"



@class GKPlayerInternal, GKGameInternal, CKShareMetadata;


@protocol GKDaemonProtocol <NSObject, CKXPCShareDaemon>

@required

- (oneway void)getAccountNameWithHandler:(void (^)(NSString *))arg1;
- (oneway void)getAuthenticatedLocalPlayersWithStatus:(unsigned long long)arg1 handler:(void (^)(NSArray *, NSError *))arg2;
- (oneway void)getAuthenticatedPlayerIDWithHandler:(void (^)(NSString *))arg1;
- (oneway void)getAuthenticatedPlayerInfo:(void (^)(GKAuthenticateResponse *, NSError *))arg1;
- (oneway void)getGamedFiredUpWithHandler:(void (^)(NSString *, NSError *))arg1;
- (oneway void)getPreferenceForKey:(NSString *)arg1 handler:(void (^)(bool, bool))arg2;
- (oneway void)getPrivateServicesForPID:(int)arg1 localPlayer:(GKPlayerInternal *)arg2 reply:(void (^)(<GKAccountServicePrivate> , <GKProfileServicePrivate> , <GKFriendServicePrivate> , <GKGameServicePrivate> , <GKGameStatServicePrivate> , <GKChallengeServicePrivate> , <GKMultiplayerServicePrivate> , <GKTurnBasedServicePrivate> , <GKUtilityServicePrivate> , <GKBulletinServicePrivate> , <GKAnalyticsServicePrivate> , <GKGameSessionServicePrivate> , <GKTournamentServicePrivate> ))arg3;
- (oneway void)getServicesForPID:(int)arg1 localPlayer:(GKPlayerInternal *)arg2 reply:(void (^)(<GKAccountService> , <GKProfileService>, <GKFriendService> , <GKGameService> , <GKGameStatService> , <GKChallengeService> , <GKMultiplayerService> , <GKTurnBasedService> , <GKUtilityService> , <GKBulletinService> , <GKAnalyticsService> , <GKGameSessionService> , <GKTournamentService> ))arg3;
- (void)handleCloudKitShareMetadata:(CKShareMetadata *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (oneway void)loadRemoteImageDataForURL:(NSURL *)arg1 reply:(void (^)(NSData *))arg2;
- (oneway void)localizedMessageFromDictionary:(NSDictionary *)arg1 forBundleID:(NSString *)arg2 handler:(void (^)(NSString *))arg3;
- (void)resetLoginCancelCount;
- (oneway void)setHostPID:(int)arg1 reply:(void (^)())arg2;
- (oneway void)setTestGame:(GKGameInternal *)arg1 reply:(void (^)())arg2;

@end

